name: Deploy to Development

on:
  push:
    branches: [ dev ]

concurrency:
  group: development
  cancel-in-progress: false

jobs:
  deploy-backend-dev:
    name: Deploy Backend to Development
    runs-on: ubuntu-latest
    environment: development
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.13'
        
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: latest
        virtualenvs-create: true
        virtualenvs-in-project: true
        
    - name: Install dependencies
      working-directory: ./backend
      run: poetry install --no-interaction --no-root
      
    - name: Run tests
      working-directory: ./backend
      run: poetry run pytest tests/ -v
      
    - name: Deploy to Render (Development)
      env:
        RENDER_TOKEN: ${{ secrets.RENDER_TOKEN_DEV }}
        RENDER_SERVICE_ID: ${{ secrets.RENDER_BACKEND_SERVICE_ID_DEV }}
      run: |
        curl -X POST "https://api.render.com/v1/services/$RENDER_SERVICE_ID/deploys" \
          -H "Authorization: Bearer $RENDER_TOKEN" \
          -H "Content-Type: application/json" \
          -d '{"clearCache": "do_not_clear"}'
      
    - name: Wait for deployment
      run: |
        echo "Waiting for backend deployment to complete..."
        sleep 60

  deploy-frontend-dev:
    name: Deploy Frontend to Development
    runs-on: ubuntu-latest
    environment: development
    needs: deploy-backend-dev
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
        
    - name: Install dependencies
      working-directory: ./frontend
      run: npm ci
      
    - name: Build application
      working-directory: ./frontend
      env:
        NEXT_PUBLIC_API_URL: ${{ secrets.NEXT_PUBLIC_API_URL_DEV }}
        NEXT_PUBLIC_ENVIRONMENT: development
      run: npm run build
      
    - name: Deploy to Vercel (Development)
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID_DEV }}
        working-directory: ./frontend
        vercel-args: '--prod'
        
    - name: Notify deployment success
      if: success()
      run: |
        echo "ðŸš€ Development deployment completed successfully!"
        echo "Frontend: ${{ secrets.FRONTEND_DEV_URL }}"
        echo "Backend: ${{ secrets.BACKEND_DEV_URL }}" 